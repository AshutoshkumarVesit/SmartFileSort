name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # No additional dependencies needed - uses only standard library

    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Test with unittest
      run: |
        python -m unittest discover tests/ -v

    - name: Test CLI functionality
      run: |
        python src/smartfilesort.py --help

    - name: Test demo setup
      run: |
        python tests/demo_setup.py --create-files --demo-dir temp_test
        python tests/demo_setup.py --preview --demo-dir temp_test
        python tests/demo_setup.py --cleanup --demo-dir temp_test

    - name: Test dry run
      run: |
        mkdir test_source test_target
        echo "test content" > test_source/test_file.txt
        python src/smartfilesort.py test_source test_target --dry-run

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
      continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install code quality tools
      run: |
        pip install black isort mypy
    
    - name: Check code formatting with black
      run: black --check --diff .
      continue-on-error: true
    
    - name: Check import sorting with isort
      run: isort --check-only --diff .
      continue-on-error: true
    
    - name: Type checking with mypy
      run: mypy src/ --ignore-missing-imports
      continue-on-error: true